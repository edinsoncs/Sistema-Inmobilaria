{
  "_args": [
    [
      "connect-mongo-store@^0.1.8",
      "C:\\proyectos\\administration\\app"
    ]
  ],
  "_from": "connect-mongo-store@>=0.1.8 <0.2.0",
  "_id": "connect-mongo-store@0.1.8",
  "_inCache": true,
  "_installable": true,
  "_location": "/connect-mongo-store",
  "_npmUser": {
    "email": "oleg008@gmail.com",
    "name": "kof"
  },
  "_npmVersion": "1.2.32",
  "_phantomChildren": {},
  "_requested": {
    "name": "connect-mongo-store",
    "raw": "connect-mongo-store@^0.1.8",
    "rawSpec": "^0.1.8",
    "scope": null,
    "spec": ">=0.1.8 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/connect-mongo-store/-/connect-mongo-store-0.1.8.tgz",
  "_shasum": "ba89f14f215afc3ad0f35f9664d423efe531f21b",
  "_shrinkwrap": null,
  "_spec": "connect-mongo-store@^0.1.8",
  "_where": "C:\\proyectos\\administration\\app",
  "author": {
    "email": "oleg008@gmail.com",
    "name": "Oleg Slobodskoi"
  },
  "bugs": {
    "url": "https://github.com/kof/node-connect-mongo-store/issues"
  },
  "dependencies": {
    "mongodb": "1.3.19"
  },
  "description": "Connect session mongodb middlware store.",
  "devDependencies": {
    "connect": ">=2.0.0 < 3",
    "qunit": "0.5.17"
  },
  "directories": {},
  "dist": {
    "shasum": "ba89f14f215afc3ad0f35f9664d423efe531f21b",
    "tarball": "https://registry.npmjs.org/connect-mongo-store/-/connect-mongo-store-0.1.8.tgz"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "homepage": "https://github.com/kof/node-connect-mongo-store#readme",
  "keywords": [
    "connect",
    "session",
    "store",
    "middleware",
    "express",
    "mongo",
    "mongodb"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/mit-license.php"
    }
  ],
  "maintainers": [
    {
      "email": "oleg008@gmail.com",
      "name": "kof"
    }
  ],
  "name": "connect-mongo-store",
  "optionalDependencies": {},
  "readme": "## Session store for connect using mongodb\n\nYes, its yet another store, built because of frustration looking at the existing implementations.\nYou can pass ANY options mongodb native driver can accept, it works in ANY setups, also with replica set.\nYou can pass your existing Db instance instead of the uri. `new MongoStore(db)`\n\n## Installation\n    $ npm install connect-mongo-store\n\n## Usage\n\n    var connect = require('connect')\n    var MongoStore = require('connect-mongo-store')(connect)\n    var mongoStore = new MongoStore('mongodb://localhost:27017/mydb', [options])\n    connect()\n        .use(connect.session({store: mongoStore, secret: 'keyboard cat'}))\n\n    mongoStore.on('connect', function() {\n        console.log('Store is ready to use')\n    })\n\n    mongoStore.on('error', function(err) {\n        console.log('Do not ignore me', err)\n    })\n\nExpress users may do the following, since express.session.Store points to the connect.session.Store function:\n\n    var MongoStore = require('connect-mongo-store')(express)\n    express()\n        .use(express.session({store: mongoStore, secret: 'keyboard cat'}))\n\n\n## Options\n\nOptions are directly passed to `MongoClient.connect`, so you can put any options for mongo here.\n\n- `collectionName` - name of collection used for sessions, default 'sessions'\n- `ttl` - time to live for a session, default 1 day\n- `cleanupInterval` - interval used to remove outdated sessions, default 60s\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/kof/node-connect-mongo-store.git"
  },
  "scripts": {},
  "version": "0.1.8"
}
